/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_POWER_CAPPING_EXTRA_H
#define _MOCKMOD_POWER_CAPPING_EXTRA_H

#include "unity.h"
#include "mod_power_capping_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_power_capping_extra_Init(void);
void Mockmod_power_capping_extra_Destroy(void);
void Mockmod_power_capping_extra_Verify(void);

#define get_power_limit_IgnoreAndReturn(cmock_retval) get_power_limit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_power_limit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_power_limit_StopIgnore() get_power_limit_CMockStopIgnore()
void get_power_limit_CMockStopIgnore(void);
#define get_power_limit_ExpectAnyArgsAndReturn(cmock_retval) get_power_limit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void get_power_limit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_power_limit_ExpectAndReturn(id, power_limit, cmock_retval) get_power_limit_CMockExpectAndReturn(__LINE__, id, power_limit, cmock_retval)
void get_power_limit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* power_limit, int cmock_to_return);
typedef int (* CMOCK_get_power_limit_CALLBACK)(fwk_id_t id, uint32_t* power_limit, int cmock_num_calls);
void get_power_limit_AddCallback(CMOCK_get_power_limit_CALLBACK Callback);
void get_power_limit_Stub(CMOCK_get_power_limit_CALLBACK Callback);
#define get_power_limit_StubWithCallback get_power_limit_Stub
#define get_power_limit_ExpectWithArrayAndReturn(id, power_limit, power_limit_Depth, cmock_retval) get_power_limit_CMockExpectWithArrayAndReturn(__LINE__, id, power_limit, power_limit_Depth, cmock_retval)
void get_power_limit_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* power_limit, int power_limit_Depth, int cmock_to_return);
#define get_power_limit_ReturnThruPtr_power_limit(power_limit) get_power_limit_CMockReturnMemThruPtr_power_limit(__LINE__, power_limit, sizeof(uint32_t))
#define get_power_limit_ReturnArrayThruPtr_power_limit(power_limit, cmock_len) get_power_limit_CMockReturnMemThruPtr_power_limit(__LINE__, power_limit, cmock_len * sizeof(*power_limit))
#define get_power_limit_ReturnMemThruPtr_power_limit(power_limit, cmock_size) get_power_limit_CMockReturnMemThruPtr_power_limit(__LINE__, power_limit, cmock_size)
void get_power_limit_CMockReturnMemThruPtr_power_limit(UNITY_LINE_TYPE cmock_line, uint32_t* power_limit, size_t cmock_size);
#define get_power_limit_IgnoreArg_id() get_power_limit_CMockIgnoreArg_id(__LINE__)
void get_power_limit_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define get_power_limit_IgnoreArg_power_limit() get_power_limit_CMockIgnoreArg_power_limit(__LINE__)
void get_power_limit_CMockIgnoreArg_power_limit(UNITY_LINE_TYPE cmock_line);
#define get_average_power_IgnoreAndReturn(cmock_retval) get_average_power_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_average_power_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_average_power_StopIgnore() get_average_power_CMockStopIgnore()
void get_average_power_CMockStopIgnore(void);
#define get_average_power_ExpectAnyArgsAndReturn(cmock_retval) get_average_power_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void get_average_power_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_average_power_ExpectAndReturn(id, power, cmock_retval) get_average_power_CMockExpectAndReturn(__LINE__, id, power, cmock_retval)
void get_average_power_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* power, int cmock_to_return);
typedef int (* CMOCK_get_average_power_CALLBACK)(fwk_id_t id, uint32_t* power, int cmock_num_calls);
void get_average_power_AddCallback(CMOCK_get_average_power_CALLBACK Callback);
void get_average_power_Stub(CMOCK_get_average_power_CALLBACK Callback);
#define get_average_power_StubWithCallback get_average_power_Stub
#define get_average_power_ExpectWithArrayAndReturn(id, power, power_Depth, cmock_retval) get_average_power_CMockExpectWithArrayAndReturn(__LINE__, id, power, power_Depth, cmock_retval)
void get_average_power_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* power, int power_Depth, int cmock_to_return);
#define get_average_power_ReturnThruPtr_power(power) get_average_power_CMockReturnMemThruPtr_power(__LINE__, power, sizeof(uint32_t))
#define get_average_power_ReturnArrayThruPtr_power(power, cmock_len) get_average_power_CMockReturnMemThruPtr_power(__LINE__, power, cmock_len * sizeof(*power))
#define get_average_power_ReturnMemThruPtr_power(power, cmock_size) get_average_power_CMockReturnMemThruPtr_power(__LINE__, power, cmock_size)
void get_average_power_CMockReturnMemThruPtr_power(UNITY_LINE_TYPE cmock_line, uint32_t* power, size_t cmock_size);
#define get_average_power_IgnoreArg_id() get_average_power_CMockIgnoreArg_id(__LINE__)
void get_average_power_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define get_average_power_IgnoreArg_power() get_average_power_CMockIgnoreArg_power(__LINE__)
void get_average_power_CMockIgnoreArg_power(UNITY_LINE_TYPE cmock_line);
#define set_averaging_interval_IgnoreAndReturn(cmock_retval) set_averaging_interval_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void set_averaging_interval_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define set_averaging_interval_StopIgnore() set_averaging_interval_CMockStopIgnore()
void set_averaging_interval_CMockStopIgnore(void);
#define set_averaging_interval_ExpectAnyArgsAndReturn(cmock_retval) set_averaging_interval_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void set_averaging_interval_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define set_averaging_interval_ExpectAndReturn(id, pai, cmock_retval) set_averaging_interval_CMockExpectAndReturn(__LINE__, id, pai, cmock_retval)
void set_averaging_interval_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t pai, int cmock_to_return);
typedef int (* CMOCK_set_averaging_interval_CALLBACK)(fwk_id_t id, uint32_t pai, int cmock_num_calls);
void set_averaging_interval_AddCallback(CMOCK_set_averaging_interval_CALLBACK Callback);
void set_averaging_interval_Stub(CMOCK_set_averaging_interval_CALLBACK Callback);
#define set_averaging_interval_StubWithCallback set_averaging_interval_Stub
#define set_averaging_interval_IgnoreArg_id() set_averaging_interval_CMockIgnoreArg_id(__LINE__)
void set_averaging_interval_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define set_averaging_interval_IgnoreArg_pai() set_averaging_interval_CMockIgnoreArg_pai(__LINE__)
void set_averaging_interval_CMockIgnoreArg_pai(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_IgnoreAndReturn(cmock_retval) get_averaging_interval_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_averaging_interval_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_averaging_interval_StopIgnore() get_averaging_interval_CMockStopIgnore()
void get_averaging_interval_CMockStopIgnore(void);
#define get_averaging_interval_ExpectAnyArgsAndReturn(cmock_retval) get_averaging_interval_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void get_averaging_interval_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_averaging_interval_ExpectAndReturn(id, pai, cmock_retval) get_averaging_interval_CMockExpectAndReturn(__LINE__, id, pai, cmock_retval)
void get_averaging_interval_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* pai, int cmock_to_return);
typedef int (* CMOCK_get_averaging_interval_CALLBACK)(fwk_id_t id, uint32_t* pai, int cmock_num_calls);
void get_averaging_interval_AddCallback(CMOCK_get_averaging_interval_CALLBACK Callback);
void get_averaging_interval_Stub(CMOCK_get_averaging_interval_CALLBACK Callback);
#define get_averaging_interval_StubWithCallback get_averaging_interval_Stub
#define get_averaging_interval_ExpectWithArrayAndReturn(id, pai, pai_Depth, cmock_retval) get_averaging_interval_CMockExpectWithArrayAndReturn(__LINE__, id, pai, pai_Depth, cmock_retval)
void get_averaging_interval_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* pai, int pai_Depth, int cmock_to_return);
#define get_averaging_interval_ReturnThruPtr_pai(pai) get_averaging_interval_CMockReturnMemThruPtr_pai(__LINE__, pai, sizeof(uint32_t))
#define get_averaging_interval_ReturnArrayThruPtr_pai(pai, cmock_len) get_averaging_interval_CMockReturnMemThruPtr_pai(__LINE__, pai, cmock_len * sizeof(*pai))
#define get_averaging_interval_ReturnMemThruPtr_pai(pai, cmock_size) get_averaging_interval_CMockReturnMemThruPtr_pai(__LINE__, pai, cmock_size)
void get_averaging_interval_CMockReturnMemThruPtr_pai(UNITY_LINE_TYPE cmock_line, uint32_t* pai, size_t cmock_size);
#define get_averaging_interval_IgnoreArg_id() get_averaging_interval_CMockIgnoreArg_id(__LINE__)
void get_averaging_interval_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_IgnoreArg_pai() get_averaging_interval_CMockIgnoreArg_pai(__LINE__)
void get_averaging_interval_CMockIgnoreArg_pai(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_step_IgnoreAndReturn(cmock_retval) get_averaging_interval_step_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_averaging_interval_step_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_averaging_interval_step_StopIgnore() get_averaging_interval_step_CMockStopIgnore()
void get_averaging_interval_step_CMockStopIgnore(void);
#define get_averaging_interval_step_ExpectAnyArgsAndReturn(cmock_retval) get_averaging_interval_step_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void get_averaging_interval_step_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_averaging_interval_step_ExpectAndReturn(id, pai_step, cmock_retval) get_averaging_interval_step_CMockExpectAndReturn(__LINE__, id, pai_step, cmock_retval)
void get_averaging_interval_step_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* pai_step, int cmock_to_return);
typedef int (* CMOCK_get_averaging_interval_step_CALLBACK)(fwk_id_t id, uint32_t* pai_step, int cmock_num_calls);
void get_averaging_interval_step_AddCallback(CMOCK_get_averaging_interval_step_CALLBACK Callback);
void get_averaging_interval_step_Stub(CMOCK_get_averaging_interval_step_CALLBACK Callback);
#define get_averaging_interval_step_StubWithCallback get_averaging_interval_step_Stub
#define get_averaging_interval_step_ExpectWithArrayAndReturn(id, pai_step, pai_step_Depth, cmock_retval) get_averaging_interval_step_CMockExpectWithArrayAndReturn(__LINE__, id, pai_step, pai_step_Depth, cmock_retval)
void get_averaging_interval_step_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* pai_step, int pai_step_Depth, int cmock_to_return);
#define get_averaging_interval_step_ReturnThruPtr_pai_step(pai_step) get_averaging_interval_step_CMockReturnMemThruPtr_pai_step(__LINE__, pai_step, sizeof(uint32_t))
#define get_averaging_interval_step_ReturnArrayThruPtr_pai_step(pai_step, cmock_len) get_averaging_interval_step_CMockReturnMemThruPtr_pai_step(__LINE__, pai_step, cmock_len * sizeof(*pai_step))
#define get_averaging_interval_step_ReturnMemThruPtr_pai_step(pai_step, cmock_size) get_averaging_interval_step_CMockReturnMemThruPtr_pai_step(__LINE__, pai_step, cmock_size)
void get_averaging_interval_step_CMockReturnMemThruPtr_pai_step(UNITY_LINE_TYPE cmock_line, uint32_t* pai_step, size_t cmock_size);
#define get_averaging_interval_step_IgnoreArg_id() get_averaging_interval_step_CMockIgnoreArg_id(__LINE__)
void get_averaging_interval_step_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_step_IgnoreArg_pai_step() get_averaging_interval_step_CMockIgnoreArg_pai_step(__LINE__)
void get_averaging_interval_step_CMockIgnoreArg_pai_step(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_range_IgnoreAndReturn(cmock_retval) get_averaging_interval_range_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_averaging_interval_range_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_averaging_interval_range_StopIgnore() get_averaging_interval_range_CMockStopIgnore()
void get_averaging_interval_range_CMockStopIgnore(void);
#define get_averaging_interval_range_ExpectAnyArgsAndReturn(cmock_retval) get_averaging_interval_range_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void get_averaging_interval_range_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define get_averaging_interval_range_ExpectAndReturn(id, min_pai, max_pai, cmock_retval) get_averaging_interval_range_CMockExpectAndReturn(__LINE__, id, min_pai, max_pai, cmock_retval)
void get_averaging_interval_range_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* min_pai, uint32_t* max_pai, int cmock_to_return);
typedef int (* CMOCK_get_averaging_interval_range_CALLBACK)(fwk_id_t id, uint32_t* min_pai, uint32_t* max_pai, int cmock_num_calls);
void get_averaging_interval_range_AddCallback(CMOCK_get_averaging_interval_range_CALLBACK Callback);
void get_averaging_interval_range_Stub(CMOCK_get_averaging_interval_range_CALLBACK Callback);
#define get_averaging_interval_range_StubWithCallback get_averaging_interval_range_Stub
#define get_averaging_interval_range_ExpectWithArrayAndReturn(id, min_pai, min_pai_Depth, max_pai, max_pai_Depth, cmock_retval) get_averaging_interval_range_CMockExpectWithArrayAndReturn(__LINE__, id, min_pai, min_pai_Depth, max_pai, max_pai_Depth, cmock_retval)
void get_averaging_interval_range_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* min_pai, int min_pai_Depth, uint32_t* max_pai, int max_pai_Depth, int cmock_to_return);
#define get_averaging_interval_range_ReturnThruPtr_min_pai(min_pai) get_averaging_interval_range_CMockReturnMemThruPtr_min_pai(__LINE__, min_pai, sizeof(uint32_t))
#define get_averaging_interval_range_ReturnArrayThruPtr_min_pai(min_pai, cmock_len) get_averaging_interval_range_CMockReturnMemThruPtr_min_pai(__LINE__, min_pai, cmock_len * sizeof(*min_pai))
#define get_averaging_interval_range_ReturnMemThruPtr_min_pai(min_pai, cmock_size) get_averaging_interval_range_CMockReturnMemThruPtr_min_pai(__LINE__, min_pai, cmock_size)
void get_averaging_interval_range_CMockReturnMemThruPtr_min_pai(UNITY_LINE_TYPE cmock_line, uint32_t* min_pai, size_t cmock_size);
#define get_averaging_interval_range_ReturnThruPtr_max_pai(max_pai) get_averaging_interval_range_CMockReturnMemThruPtr_max_pai(__LINE__, max_pai, sizeof(uint32_t))
#define get_averaging_interval_range_ReturnArrayThruPtr_max_pai(max_pai, cmock_len) get_averaging_interval_range_CMockReturnMemThruPtr_max_pai(__LINE__, max_pai, cmock_len * sizeof(*max_pai))
#define get_averaging_interval_range_ReturnMemThruPtr_max_pai(max_pai, cmock_size) get_averaging_interval_range_CMockReturnMemThruPtr_max_pai(__LINE__, max_pai, cmock_size)
void get_averaging_interval_range_CMockReturnMemThruPtr_max_pai(UNITY_LINE_TYPE cmock_line, uint32_t* max_pai, size_t cmock_size);
#define get_averaging_interval_range_IgnoreArg_id() get_averaging_interval_range_CMockIgnoreArg_id(__LINE__)
void get_averaging_interval_range_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_range_IgnoreArg_min_pai() get_averaging_interval_range_CMockIgnoreArg_min_pai(__LINE__)
void get_averaging_interval_range_CMockIgnoreArg_min_pai(UNITY_LINE_TYPE cmock_line);
#define get_averaging_interval_range_IgnoreArg_max_pai() get_averaging_interval_range_CMockIgnoreArg_max_pai(__LINE__)
void get_averaging_interval_range_CMockIgnoreArg_max_pai(UNITY_LINE_TYPE cmock_line);
#define update_IgnoreAndReturn(cmock_retval) update_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void update_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define update_StopIgnore() update_CMockStopIgnore()
void update_CMockStopIgnore(void);
#define update_ExpectAnyArgsAndReturn(cmock_retval) update_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void update_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define update_ExpectAndReturn(id, input, output, cmock_retval) update_CMockExpectAndReturn(__LINE__, id, input, output, cmock_retval)
void update_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, int64_t input, int64_t* output, int cmock_to_return);
typedef int (* CMOCK_update_CALLBACK)(fwk_id_t id, int64_t input, int64_t* output, int cmock_num_calls);
void update_AddCallback(CMOCK_update_CALLBACK Callback);
void update_Stub(CMOCK_update_CALLBACK Callback);
#define update_StubWithCallback update_Stub
#define update_ExpectWithArrayAndReturn(id, input, output, output_Depth, cmock_retval) update_CMockExpectWithArrayAndReturn(__LINE__, id, input, output, output_Depth, cmock_retval)
void update_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, int64_t input, int64_t* output, int output_Depth, int cmock_to_return);
#define update_ReturnThruPtr_output(output) update_CMockReturnMemThruPtr_output(__LINE__, output, sizeof(int64_t))
#define update_ReturnArrayThruPtr_output(output, cmock_len) update_CMockReturnMemThruPtr_output(__LINE__, output, cmock_len * sizeof(*output))
#define update_ReturnMemThruPtr_output(output, cmock_size) update_CMockReturnMemThruPtr_output(__LINE__, output, cmock_size)
void update_CMockReturnMemThruPtr_output(UNITY_LINE_TYPE cmock_line, int64_t* output, size_t cmock_size);
#define update_IgnoreArg_id() update_CMockIgnoreArg_id(__LINE__)
void update_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define update_IgnoreArg_input() update_CMockIgnoreArg_input(__LINE__)
void update_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);
#define update_IgnoreArg_output() update_CMockIgnoreArg_output(__LINE__)
void update_CMockIgnoreArg_output(UNITY_LINE_TYPE cmock_line);
#define set_point_IgnoreAndReturn(cmock_retval) set_point_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void set_point_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define set_point_StopIgnore() set_point_CMockStopIgnore()
void set_point_CMockStopIgnore(void);
#define set_point_ExpectAnyArgsAndReturn(cmock_retval) set_point_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void set_point_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define set_point_ExpectAndReturn(id, input, cmock_retval) set_point_CMockExpectAndReturn(__LINE__, id, input, cmock_retval)
void set_point_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, int64_t input, int cmock_to_return);
typedef int (* CMOCK_set_point_CALLBACK)(fwk_id_t id, int64_t input, int cmock_num_calls);
void set_point_AddCallback(CMOCK_set_point_CALLBACK Callback);
void set_point_Stub(CMOCK_set_point_CALLBACK Callback);
#define set_point_StubWithCallback set_point_Stub
#define set_point_IgnoreArg_id() set_point_CMockIgnoreArg_id(__LINE__)
void set_point_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define set_point_IgnoreArg_input() set_point_CMockIgnoreArg_input(__LINE__)
void set_point_CMockIgnoreArg_input(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
