/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_POWER_DISTRIBUTOR_EXTRA_H
#define _MOCKMOD_POWER_DISTRIBUTOR_EXTRA_H

#include "unity.h"
#include "mod_power_distributor_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_power_distributor_extra_Init(void);
void Mockmod_power_distributor_extra_Destroy(void);
void Mockmod_power_distributor_extra_Verify(void);




#define mock_get_power_limit_IgnoreAndReturn(cmock_retval) mock_get_power_limit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mock_get_power_limit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mock_get_power_limit_StopIgnore() mock_get_power_limit_CMockStopIgnore()
void mock_get_power_limit_CMockStopIgnore(void);
#define mock_get_power_limit_ExpectAnyArgsAndReturn(cmock_retval) mock_get_power_limit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mock_get_power_limit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mock_get_power_limit_ExpectAndReturn(id, power_limit, cmock_retval) mock_get_power_limit_CMockExpectAndReturn(__LINE__, id, power_limit, cmock_retval)
void mock_get_power_limit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* power_limit, int cmock_to_return);
typedef int (* CMOCK_mock_get_power_limit_CALLBACK)(fwk_id_t id, uint32_t* power_limit, int cmock_num_calls);
void mock_get_power_limit_AddCallback(CMOCK_mock_get_power_limit_CALLBACK Callback);
void mock_get_power_limit_Stub(CMOCK_mock_get_power_limit_CALLBACK Callback);
#define mock_get_power_limit_StubWithCallback mock_get_power_limit_Stub
#define mock_get_power_limit_ExpectWithArrayAndReturn(id, power_limit, power_limit_Depth, cmock_retval) mock_get_power_limit_CMockExpectWithArrayAndReturn(__LINE__, id, power_limit, power_limit_Depth, cmock_retval)
void mock_get_power_limit_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t* power_limit, int power_limit_Depth, int cmock_to_return);
#define mock_get_power_limit_ReturnThruPtr_power_limit(power_limit) mock_get_power_limit_CMockReturnMemThruPtr_power_limit(__LINE__, power_limit, sizeof(uint32_t))
#define mock_get_power_limit_ReturnArrayThruPtr_power_limit(power_limit, cmock_len) mock_get_power_limit_CMockReturnMemThruPtr_power_limit(__LINE__, power_limit, cmock_len * sizeof(*power_limit))
#define mock_get_power_limit_ReturnMemThruPtr_power_limit(power_limit, cmock_size) mock_get_power_limit_CMockReturnMemThruPtr_power_limit(__LINE__, power_limit, cmock_size)
void mock_get_power_limit_CMockReturnMemThruPtr_power_limit(UNITY_LINE_TYPE cmock_line, uint32_t* power_limit, size_t cmock_size);
#define mock_get_power_limit_IgnoreArg_id() mock_get_power_limit_CMockIgnoreArg_id(__LINE__)
void mock_get_power_limit_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define mock_get_power_limit_IgnoreArg_power_limit() mock_get_power_limit_CMockIgnoreArg_power_limit(__LINE__)
void mock_get_power_limit_CMockIgnoreArg_power_limit(UNITY_LINE_TYPE cmock_line);
#define mock_set_power_limit_IgnoreAndReturn(cmock_retval) mock_set_power_limit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mock_set_power_limit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mock_set_power_limit_StopIgnore() mock_set_power_limit_CMockStopIgnore()
void mock_set_power_limit_CMockStopIgnore(void);
#define mock_set_power_limit_ExpectAnyArgsAndReturn(cmock_retval) mock_set_power_limit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mock_set_power_limit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mock_set_power_limit_ExpectAndReturn(id, power_limit, cmock_retval) mock_set_power_limit_CMockExpectAndReturn(__LINE__, id, power_limit, cmock_retval)
void mock_set_power_limit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t power_limit, int cmock_to_return);
typedef int (* CMOCK_mock_set_power_limit_CALLBACK)(fwk_id_t id, uint32_t power_limit, int cmock_num_calls);
void mock_set_power_limit_AddCallback(CMOCK_mock_set_power_limit_CALLBACK Callback);
void mock_set_power_limit_Stub(CMOCK_mock_set_power_limit_CALLBACK Callback);
#define mock_set_power_limit_StubWithCallback mock_set_power_limit_Stub
#define mock_set_power_limit_IgnoreArg_id() mock_set_power_limit_CMockIgnoreArg_id(__LINE__)
void mock_set_power_limit_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define mock_set_power_limit_IgnoreArg_power_limit() mock_set_power_limit_CMockIgnoreArg_power_limit(__LINE__)
void mock_set_power_limit_CMockIgnoreArg_power_limit(UNITY_LINE_TYPE cmock_line);
#define mock_set_power_demand_IgnoreAndReturn(cmock_retval) mock_set_power_demand_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mock_set_power_demand_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mock_set_power_demand_StopIgnore() mock_set_power_demand_CMockStopIgnore()
void mock_set_power_demand_CMockStopIgnore(void);
#define mock_set_power_demand_ExpectAnyArgsAndReturn(cmock_retval) mock_set_power_demand_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mock_set_power_demand_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mock_set_power_demand_ExpectAndReturn(id, power_demand, cmock_retval) mock_set_power_demand_CMockExpectAndReturn(__LINE__, id, power_demand, cmock_retval)
void mock_set_power_demand_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t power_demand, int cmock_to_return);
typedef int (* CMOCK_mock_set_power_demand_CALLBACK)(fwk_id_t id, uint32_t power_demand, int cmock_num_calls);
void mock_set_power_demand_AddCallback(CMOCK_mock_set_power_demand_CALLBACK Callback);
void mock_set_power_demand_Stub(CMOCK_mock_set_power_demand_CALLBACK Callback);
#define mock_set_power_demand_StubWithCallback mock_set_power_demand_Stub
#define mock_set_power_demand_IgnoreArg_id() mock_set_power_demand_CMockIgnoreArg_id(__LINE__)
void mock_set_power_demand_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define mock_set_power_demand_IgnoreArg_power_demand() mock_set_power_demand_CMockIgnoreArg_power_demand(__LINE__)
void mock_set_power_demand_CMockIgnoreArg_power_demand(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
